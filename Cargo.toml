cargo-features = ["edition2024"]

[package]
name = "underground-scraper"
version = "1.0.0"
authors = ["jkjkmxmx <yhx12243@gmail.com>"]
edition = "2024"
readme = "README.md"
repository = "https://github.com/yhx-12243/underground-scraper"

[dependencies]
actix-cors = { version = "0.7.0", features = ["draft-private-network-access"] }
actix-web = "4.7.0"
anyhow = { version = "1.0.86", features = ["backtrace"] }
bb8-postgres = { version = "0.8.1", features = ["with-serde_json-1"] }
bytes = { version = "1.6.0", features = ["serde"] }
clap = { version = "4.5.7", features = ["derive", "unicode", "wrap_help", "env", "string", "unstable-v5"] }
clap_derive = { version = "4.5.5", features = ["unstable-v5"] }
compact_str = { version = "0.8.0-beta", features = ["serde"] }
const_format = "0.2.32"
fantoccini = "0.19.3"
futures-util = "0.3.30"
grammers-client = { git = "https://github.com/Lonami/grammers", features = ["parse_invite_link"] }
grammers-mtsender = { git = "https://github.com/Lonami/grammers" }
grammers-session = { git = "https://github.com/Lonami/grammers" }
grammers-tl-types = { git = "https://github.com/Lonami/grammers" }
hashbrown = { version = "0.14.5", features = ["serde"] }
headless_chrome = "1.0.10"
httpdate = "1.0.3"
indicatif = { version = "0.17.8", features = ["improved_unicode"] }
log = { version = "0.4.21", features = ["release_max_level_info"] }
parking_lot = "0.12.2"
postgres-protocol = "0.6.6"
pretty_env_logger = "0.5.0"
rand = { version = "0.8.5", features = ["log", "nightly"] }
regex = "1.10.4"
reqwest = { version = "0.12.4", features = ["json", "native-tls-alpn"] }
scraper = "0.19.0"
serde = { version = "1.0.203", features = ["derive"] }
serde_json = { version = "1.0.117", features = ["float_roundtrip"] }
tokio = { version = "1.38.0", features = ["macros", "parking_lot", "rt-multi-thread", "tracing"] }
tokio-postgres = { version = "0.7.10", features = ["with-serde_json-1"] }
tracing = { version = "0.1.40", features = ["log", "release_max_level_info"] }

[lints.rust]
internal_features  = { level = "allow", priority = 1 }
non_snake_case = { level = "allow", priority = 1 }

[lints.clippy]
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
absolute_paths = { level = "allow", priority = 1 }
arithmetic_side_effects = { level = "allow", priority = 1 }
as_conversions = { level = "allow", priority = 1 }
cast_lossless = { level = "allow", priority = 1 } # u32 -> u64
cast_possible_truncation = { level = "allow", priority = 1 } # u64 -> u32
cast_possible_wrap = { level = "allow", priority = 1 } # u32 -> i32
cast_sign_loss = { level = "allow", priority = 1 } # i32 -> u32
default_numeric_fallback = { level = "allow", priority = 1 }
option_if_let_else = { level = "allow", priority = 1 }
future_not_send = { level = "allow", priority = 1 }
host_endian_bytes = { level = "allow", priority = 1 }
implicit_return = { level = "allow", priority = 1 }
indexing_slicing = { level = "allow", priority = 1 }
inline_always = { level = "allow", priority = 1 }
integer_division = { level = "allow", priority = 1 }
integer_division_remainder_used = { level = "allow", priority = 1 }
min_ident_chars = { level = "allow", priority = 1 }
missing_assert_message = { level = "allow", priority = 1 }
missing_docs_in_private_items = { level = "allow", priority = 1 }
missing_errors_doc = { level = "allow", priority = 1 }
missing_panics_doc = { level = "allow", priority = 1 }
missing_trait_methods = { level = "allow", priority = 1 }
module_name_repetitions = { level = "allow", priority = 1 }
multiple_unsafe_ops_per_block = { level = "allow", priority = 1 }
needless_pass_by_value = { level = "allow", priority = 1 }
non_ascii_literal = { level = "allow", priority = 1 }
pattern_type_mismatch = { level = "allow", priority = 1 }
pub_use = { level = "allow", priority = 1 }
question_mark_used = { level = "allow", priority = 1 }
ref_patterns = { level = "allow", priority = 1 }
self_named_module_files = { level = "allow", priority = 1 }
separated_literal_suffix = { level = "allow", priority = 1 }
shadow_reuse = { level = "allow", priority = 1 }
shadow_same = { level = "allow", priority = 1 }
shadow_unrelated = { level = "allow", priority = 1 }
similar_names = { level = "allow", priority = 1 }
single_call_fn = { level = "allow", priority = 1 }
single_char_lifetime_names = { level = "allow", priority = 1 }
std_instead_of_alloc = { level = "allow", priority = 1 }
std_instead_of_core = { level = "allow", priority = 1 }
string_add = { level = "allow", priority = 1 }
string_slice = { level = "allow", priority = 1 }
unseparated_literal_suffix = { level = "allow", priority = 1 }
wildcard_enum_match_arm = { level = "allow", priority = 1 }

[[bin]]
name = "accsmarket"
path = "src/accsmarket/main.rs"

[[bin]]
name = "blackhatworld"
path = "src/blackhatworld/main.rs"

[[bin]]
name = "hackforums"
path = "src/hackforums/main.rs"

[[bin]]
name = "hackforums-inner"
path = "src/hackforums-inner/main.rs"

[[bin]]
name = "blackhatworld-worker"
path = "src/blackhatworld-worker/main.rs"

[[bin]]
name = "ezkify"
path = "src/ezkify/main.rs"

[[bin]]
name = "telegram"
path = "src/telegram/main.rs"

[[bin]]
name = "discord"
path = "src/discord/main.rs"

[lib]
name = "uscr"
path = "src/lib.rs"
